server.port=8001
spring.devtools.livereload.enabled=false

### EXISTENTE: auth code flow para login do usuário
spring.security.oauth2.client.registration.keycloak.client-id=identity-admin
spring.security.oauth2.client.registration.keycloak.client-secret=865nL6xlbRmVkXKLDdmiEZzr724sHwmS
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email
spring.security.oauth2.client.registration.keycloak.client-name=identity-admin
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:7001/realms/master
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:7001/realms/master

# --- backend-to-backend para checkin API ---
spring.security.oauth2.client.registration.identity-admin-cc.client-id=identity-admin
spring.security.oauth2.client.registration.identity-admin-cc.client-secret=865nL6xlbRmVkXKLDdmiEZzr724sHwmS
spring.security.oauth2.client.registration.identity-admin-cc.authorization-grant-type=client_credentials
spring.security.oauth2.client.provider.identity-admin-cc.token-uri=http://localhost:7001/realms/master/protocol/openid-connect/token

# base-url da API de workouts
checkin.api.base-url=http://localhost:8080

# provider correspondente
spring.security.oauth2.client.provider.checkin.token-uri=http://localhost:7001/realms/identity-realm/protocol/openid-connect/token

